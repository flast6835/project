<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPYAAAHOCAYAAACrTPS8AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAEFNJREFUeF7t3U2SFFUfRnF2IDuQHegKlB3IXCN0B7oAI3DuQFegzh3o3A/mDmRq
        CA2BgJ+IoiDQNNQb/464RPbNzMpq7FeqnvidiBNdmXlvZnZ3ncqqhu46tQIQx6l+BYDdR9hAIMIGAhE2
        EIiwgUCEDQQibCAQYQOBCBsIRNhAIMIGAhE2EIiwgUCEDQQibCAQYQOBCBsIRNhAIMIGAhE2EIiwgUCE
        DQQibCAQYQOBCBsIRNhAIMIGAhE2EIiwgUCEDQQibCAQYQOBCBsIRNhAIMIGAhE2EIiwgUCEDQQibCAQ
        YQOBCBsIRNhAIMIGAhE2EIiwgUCEDQQibCAQYQOBCBsIRNhAIMIGAhE2EIiwgUCEDQQibCAQYQOBCBsI
        RNgnyGeffbb6+OOPV3/88Ue/6SlXr16dHTO37eLFi4frm3Wck+DChQsnti9sF8I+ISrKU6dOHfrJJ5/0
        m59SMdWYGt9T0U5te++99w7Xnz179tC6/dZbbx0Z8yzUPs6cOdOv3pg6z5rvwWH7EPYJ0aJ8+eWXD+Mb
        UlfgDz/88DD4PuzhtnVhDwNsodeVvKyw6mOtL9o+a7mON6SWa33NGYZd64dja/twuc2r82zn98EHHzx9
        kKnjt3F17LL/PPDfIewTooKuO3jdoevO3p5Ot6va6dOnV+fOnXt6xa31/ba6vUnY7cGhxVbz2wNK22dZ
        +6xxdU5FxTq88rdxRZ378AGpbrdnBe2BpJ1jWZ9f23+NbQ8ubVxZ59V/LvhvEPYJ0J6G15277vDDmPqr
        cIukltuDwNS2IS3s9pq4Iq7lGtfPmTpeBVbn1WJuDJfXhV3z33nnncPbtd92hW6fd3vp0X8+db79zwvw
        3yDsE6Du9HWHrohaSC2S2jZ1tW2BDLd9/vnns2HX+na1rH23p7791bzf5/B4tX742nx4bnNht3j7p/RF
        H3Yt14NOO9eaL+zng7BPgLoTt6fiLZC6c7fXuu2KWQyvqMOradFf8Rp9vEP6bRXr1PHaFXsY72uvvXYk
        7PocGsMwa357BlLLdcw6xz7s2lbW+nbcNg//LcL+l7Qr4vAnwy2GFkDdrtecLcIW7/A1aW1rV7t/E3bN
        ba/ZK6rhVXr4w66333776TOAoj2oDB+Y2rz2ernGDF87t8+z1rUf3rVx7VnGun8hwP8PYf9L2k+Xe+qO
        XSEVFX/d+Wtc3R4+Ra357Wlvv61RY9pr3J6pbRXdm2++eXjM8+fPH9lfXUnreLW+n1vnW3MqxopzGGVt
        a+fZXgYU7fzb2Lb/th88H4QNBCJsIBBhA4EIGwhE2EAgwgYCETYQiLCBQIQNBCJsIBBhA4EIGwhE2EAg
        wgYCETYQiLCBQIQNBCJsIBBhA4EIGwhE2EAgwgYCETYQiLCBQIQNBCJsIBBhA4EIGwhE2EAgwgYCETYQ
        iLCBQIQNBCJsIBBhA4EIGwhE2EAgwgYCETYQiLCBQIQNBCJsIBBhA4EIGwhE2EAgwgYCETYQiLCBQIQN
        BCJsIBBhA4EIGwhE2EAgwgYCETYQiLCBQIQNBCJsIJDFsO/du7e6ffv26tatWyS3wOqxulzHbNj7+/ur
        69evr77//nuSW+jNmzcPO51iMuwafOXKldGOSG6XV69eXR0cHPQJj8N+8uTJ6qeffhrtgOR2+ttvv/UZ
        j8N+9OjRaCLJ7fXy5cuHF+Qho7Dv3r07mkhyu3348OGRjkdh//3336NJJLfbBw8eHOlY2GSAwiYDFTYZ
        6GLYfnhG7p6LYbtik7unsMlAhU0Guhi219jk7rkYtis2uXsKmwxU2GSgwiYDFTYZqLDJQIVNBipsMlBh
        k4EKmwxU2GSgwiYDFTYZqLDJQIVNBipsMtDFsOvtOftJJLfbxbDrrULqvYD6iSS30729vdE7bo7Cfvz4
        sXfbJHfIX3/9dflN+WpAXda9Pza5/dbVun9DvmIUdlFX7XqtffPmzdGOSG6H169fX92/f/+w157JsIu6
        cu/v7x/+1dJbt26tfv7558On6PWx3R4uD9dP3Z6zH7O03LtuezvHTcb064fbhx+n5szNH46bGzPlceb0
        Y/rl3qntc+t658b06zfxOPP6sf1xp7b3y/2cqbH9uKnxvVPjhx/7ffTH69dNLffrq8fqst7Lvn8K3pgN
        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
        8wAAAABJRU5ErkJggg==
</value>
  </data>
</root>