<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>